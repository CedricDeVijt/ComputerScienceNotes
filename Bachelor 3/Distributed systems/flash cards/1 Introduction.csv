"Define a distributed system. What makes it appear as a single coherent system to users?","A distributed system is a collection of independent computers that appears to users as a single coherent system. This coherence is achieved through middleware, communication protocols, and service abstractions that hide distribution."
"Provide two real-world examples of distributed systems and explain why they fit the definition.","Examples: (1) The World Wide Web – millions of servers providing information as if from one system. (2) BitTorrent – peers collaboratively share files in a self-organized manner. Both involve multiple independent computers cooperating seamlessly."
"Explain the concept 'the network is the computer' in the context of distributed systems.","It means that computing power and resources are not localized but emerge from the interconnection of many nodes across a network, functioning collectively like a single computer."
"What is a service in distributed systems? Provide an example.","A service is a part of a computer system managing resources and presenting functionality to users and applications via an interface. Example: A video streaming service providing play/pause/rewind operations."
"Differentiate between a client and a server in distributed systems.","A server is a running process on a networked computer that accepts requests and provides services. A client is a running process that sends requests to servers. Both interact through defined protocols."
"Describe the process of remote invocation. Why is it fundamental in distributed systems?","Remote invocation is the complete interaction between client and server to process a single request (send request → execute service → return response). It is fundamental because it allows clients to transparently access services located remotely."
"List three key motivations for using distributed systems and explain each.","(1) Cost – commodity hardware can achieve high performance per dollar. (2) Capability – some computational problems exceed the resources of a single machine. (3) Reliability – redundancy across systems reduces the impact of failures."
"What are two main challenges of distributed systems that stem from lack of global control?","(1) No global time notion – synchronization across systems is hard. (2) Partial failures – one node may fail while others continue, complicating fault tolerance."
"Compare vertical and horizontal scaling in distributed systems.","Vertical scaling: increasing resources (CPU, memory) of a single machine. Horizontal scaling: adding more machines to the system. Distributed systems primarily rely on horizontal scaling for flexibility and fault tolerance."
"Define a coupled logical architecture and describe its advantages and disadvantages.","In coupled architectures, components are tightly linked. Advantage: fewer interfaces, simpler layering. Disadvantage: reduced flexibility, duplication of functionality, difficult maintenance."
"Define a decoupled logical architecture and describe its advantages and disadvantages.","In decoupled architectures, components are loosely linked. Advantage: easy to add/remove components, supports flexibility. Disadvantage: possible bottlenecks (data-centric) or complexity (event-based)."
"Explain the difference between a layered architecture and an object-based architecture in distributed systems.","Layered: interaction restricted to adjacent layers, easier replacement but possible duplication. Object-based: components interact more flexibly, supporting reuse but more complex to manage."
"Compare data-centric and event-based decoupled architectures.","Data-centric: interaction through shared database, simple but may cause bottlenecks. Event-based: publish-subscribe or message-driven, highly flexible and asynchronous but harder to debug and coordinate."
"Describe a simple client-server architecture and explain its limitations.","A client sends a request and the server replies directly. Limitation: single server is a bottleneck, lacks scalability and fault tolerance."
"Explain the difference between explicit server lookup and implicit server lookup in client-multiserver architectures.","Explicit lookup: client queries a directory (e.g., DNS) to get server address. Implicit lookup: a server forwards client requests to another server transparently, reducing client complexity but increasing communication hops."
"What role does a proxy server play in client-server architectures?","A proxy acts as an intermediary that forwards requests and replies, used for caching, load balancing, or security. It hides server details from the client."
"Describe the main characteristics of peer-to-peer (P2P) architectures.","Fully decentralized, each node acts as both client and server, uses overlay networks, nodes may be volatile, and message routing is application-level. Examples: file-sharing systems like BitTorrent."
"Explain how GUIDs (Globally Unique Identifiers) are used in peer-to-peer systems.","GUIDs uniquely identify nodes and data items in the P2P network, enabling consistent location and routing without central coordination."
"Why is concurrency both a motivation and a challenge in distributed systems?","Motivation: concurrency allows large problems to be solved faster via parallelism. Challenge: concurrent processes may conflict, requiring synchronization and coordination mechanisms."
"Summarize the main reasons why organizations integrate distributed systems.","Integration enables collaboration across organizations, supports interoperability of specialized infrastructures (e.g., telescopes, storage facilities), and allows geographically distributed users to share resources."
